"""paper ai annotations

Revision ID: 3e0f601dfe87
Revises: 1b82824bfb3b
Create Date: 2025-06-14 03:28:13.071438+00:00

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "3e0f601dfe87"
down_revision: Union[str, None] = "1b82824bfb3b"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("annotations", sa.Column("role", sa.String(), nullable=True))
    op.alter_column("annotations", "user_id", existing_type=sa.UUID(), nullable=False)
    op.add_column("highlights", sa.Column("page_number", sa.Integer(), nullable=True))
    op.add_column("highlights", sa.Column("role", sa.String(), nullable=True))
    op.alter_column(
        "highlights", "start_offset", existing_type=sa.INTEGER(), nullable=True
    )
    op.alter_column(
        "highlights", "end_offset", existing_type=sa.INTEGER(), nullable=True
    )
    op.add_column(
        "papers",
        sa.Column(
            "page_offset_map", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
    )

    # Set the default value of role to 'user' for existing annotations
    op.execute("UPDATE annotations SET role = 'user' WHERE role IS NULL")
    # Set the default value of role to 'user' for existing highlights
    op.execute("UPDATE highlights SET role = 'user' WHERE role IS NULL")

    # Make the role column non-nullable after setting defaults
    op.alter_column("annotations", "role", existing_type=sa.String(), nullable=False)
    op.alter_column("highlights", "role", existing_type=sa.String(), nullable=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("papers", "page_offset_map")
    op.alter_column(
        "highlights", "end_offset", existing_type=sa.INTEGER(), nullable=False
    )
    op.alter_column(
        "highlights", "start_offset", existing_type=sa.INTEGER(), nullable=False
    )
    op.drop_column("highlights", "role")
    op.drop_column("highlights", "page_number")
    op.alter_column("annotations", "user_id", existing_type=sa.UUID(), nullable=True)
    op.drop_column("annotations", "role")
    # ### end Alembic commands ###
